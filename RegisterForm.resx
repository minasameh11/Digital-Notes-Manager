<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>